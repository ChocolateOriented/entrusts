<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.entrusts.mapper.OrderMapper">
  <sql id="orderColumns">
  </sql>

	<insert id="insertOrder" parameterType="com.entrusts.module.entity.Order">
  INSERT INTO `order` (
    `order_code`,
    `user_code`,
    `client_time`,
    `order_time`,
    `trade_pair_id`,
    `convert_rate`,
    `trade_type`,
    `quantity`,
    `mode`,
    `status`,
    `created_time`,
    `updated_time`,
    `is_deleted`
    )
		values (
			#{orderCode,jdbcType=CHAR},
			#{userCode,jdbcType=VARCHAR},
			#{clientTime,jdbcType=TIMESTAMP},
			#{orderTime,jdbcType=TIMESTAMP},
			#{tradePairId,jdbcType=INTEGER},
			#{convertRate,jdbcType=DECIMAL},
			#{tradeType,jdbcType=TINYINT},
			#{quantity,jdbcType=DECIMAL},
			#{mode,jdbcType=TINYINT},
			#{status,jdbcType=TINYINT},
      now(),
      now(),
      0
		)
	</insert>

  <update id="updateOrderStatus">
	    UPDATE `order`
		    SET
		    updated_time = now(),
		    `status` = #{status}
	    WHERE
	    	order_code = #{orderCode}
  </update>

	<select id="get">
		select
			o.order_code as orderCode,
			o.user_code as userCode,
			o.client_time as clientTime,
			o.order_time as orderTime,
			o.trade_pair_id as tradePairId,
			o.convert_rate as convertRate,
			o.trade_type as tradeType,
			o.quantity as quantity,
			o.amount as amount,
			o.mode as mode,
			o.status as status,
			o.service_fee_rate as serviceFeeRate,
			o.deal_amount as dealAmount,
			o.deal_quantity as dealQuantity,
			o.lasted_deal_time as lastedDealTime,
			o.created_time as createdTime,
			o.updated_time as updatedTime,
			o.is_deleted as isDeleted
		from `order` o
		where o.order_code = #{orderCode}
	</select>

	<select id="findHistoryOrderByPage" resultType="com.entrusts.module.vo.HistoryOrderView">
		select
			o.order_code as orderCode,
			o.created_time as date,
			c1.alias as baseCurrency,
			c2.alias as targetCurrency,
			if(o.trade_type = 1, 'buy', 'sell') as tradeType,
			o.convert_rate as orderPrice,
			o.deal_quantity as dealTargetQuantity,
			o.deal_amount as dealBaseAmount,
			o.deal_amount * sevice_fee_rate as serviceFee,
			status
		from `order` o
		left join trade_pair p on o.trade_pair_id = p.id
		left join digital_currency c1 on c1.id = p.base_currency_id
		left join digital_currency c2 on c2.id = p.target_currency_id 
		where user_code = #{userCode}
		and status in (30, 40)
		<if test="startTime != null">
			<![CDATA[ and o.created_time >= #{startTime} ]]>
		</if>
		<if test="endTime != null">
			<![CDATA[ and o.created_time <= #{endTime} ]]>
		</if>
		<if test="direction != null">
			and o.trade_type = #{direction}
		</if>
		<if test="direction != null">
			and o.trade_type = #{direction}
		</if>
		<if test="baseCurrency != null and baseCurrency != ''">
			and c1.alias = #{baseCurrency}
		</if>
		<if test="targetCurrency != null and targetCurrency != ''">
			and c2.alias = #{targetCurrency}
		</if>
	</select>
	
	<select id="findHistoryOrderByTime" resultType="com.entrusts.module.vo.HistoryOrderView">
		select
			o.order_code as orderCode,
			o.created_time as date,
			c1.alias as baseCurrency,
			c2.alias as targetCurrency,
			if(o.trade_type = 1, 'buy', 'sell') as tradeType,
			o.convert_rate as orderPrice,
			o.deal_quantity as dealTargetQuantity,
			o.deal_amount as dealBaseAmount,
			o.deal_amount * sevice_fee_rate as serviceFee,
			status
		from `order` o
		left join trade_pair p on o.trade_pair_id = p.id
		left join digital_currency c1 on c1.id = p.base_currency_id
		left join digital_currency c2 on c2.id = p.target_currency_id 
		where user_code = #{userCode}
		and status in (30, 40)
		<if test="toCreatedTime != null">
			<![CDATA[ and o.created_time < #{toCreatedTime} ]]>
		</if>
		<if test="startTime != null">
			<![CDATA[ and o.created_time >= #{startTime} ]]>
		</if>
		<if test="endTime != null">
			<![CDATA[ and o.created_time <= #{endTime} ]]>
		</if>
		<if test="direction != null">
			and o.trade_type = #{direction}
		</if>
		<if test="direction != null">
			and o.trade_type = #{direction}
		</if>
		<if test="baseCurrency != null and baseCurrency != ''">
			and c1.alias = #{baseCurrency}
		</if>
		<if test="targetCurrency != null and targetCurrency != ''">
			and c2.alias = #{targetCurrency}
		</if>
		order by o.created_time desc
		limit #{limit}
	</select>
	
	<select id="countHistoryOrderByTime" resultType="long">
		select
			count(o.order_code)
		from `order` o
		left join trade_pair p on o.trade_pair_id = p.id
		left join digital_currency c1 on c1.id = p.base_currency_id
		left join digital_currency c2 on c2.id = p.target_currency_id 
		where user_code = #{userCode}
		and status in (30, 40)
		<if test="toCreatedTime != null">
			<![CDATA[ and o.created_time < #{toCreatedTime} ]]>
		</if>
		<if test="startTime != null">
			<![CDATA[ and o.created_time >= #{startTime} ]]>
		</if>
		<if test="endTime != null">
			<![CDATA[ and o.created_time <= #{endTime} ]]>
		</if>
		<if test="direction != null">
			and o.trade_type = #{direction}
		</if>
		<if test="direction != null">
			and o.trade_type = #{direction}
		</if>
		<if test="baseCurrency != null and baseCurrency != ''">
			and c1.alias = #{baseCurrency}
		</if>
		<if test="targetCurrency != null and targetCurrency != ''">
			and c2.alias = #{targetCurrency}
		</if>
	</select>
	
	<select id="findLimitHistoryOrder" resultType="com.entrusts.module.vo.HistoryOrderView">
		select
			o.order_code as orderCode,
			o.created_time as date,
			c1.alias as baseCurrency,
			c2.alias as targetCurrency,
			if(o.trade_type = 1, 'buy', 'sell') as tradeType,
			o.convert_rate as orderPrice,
			o.deal_quantity as dealTargetQuantity,
			o.deal_amount as dealBaseAmount,
			o.deal_amount * sevice_fee_rate as serviceFee,
			status
		from `order` o
		left join trade_pair p on o.trade_pair_id = p.id
		left join digital_currency c1 on c1.id = p.base_currency_id
		left join digital_currency c2 on c2.id = p.target_currency_id 
		where user_code = #{userCode}
		and status in (30, 40)
		order by o.created_time desc
		limit #{limit}
	</select>
	
	<select id="getHistoryOrder" resultType="com.entrusts.module.vo.HistoryOrderView">
		select
			o.order_code as orderCode,
			o.created_time as date,
			c1.alias as baseCurrency,
			c2.alias as targetCurrency,
			if(o.trade_type = 1, 'buy', 'sell') as tradeType,
			o.convert_rate as orderPrice,
			o.deal_quantity as dealTargetQuantity,
			o.deal_amount as dealBaseAmount,
			o.deal_amount * sevice_fee_rate as serviceFee,
			status
		from `order` o
		left join trade_pair p on o.trade_pair_id = p.id
		left join digital_currency c1 on c1.id = p.base_currency_id
		left join digital_currency c2 on c2.id = p.target_currency_id 
		where order_code = #{orderCode}
		and status in (30, 40)
	</select>
	
	<select id="totalHistoryOrder">
		select
			count(o.order_code)
		from `order` o
		where user_code = #{userCode}
		and status in (30, 40)
	</select>

	<update id="updateOrderNewDeal">
		update `order` set
		deal_amount = deal_amount + #{dealAmount},
		deal_quantity = deal_quantity + #{dealQuantity},
		lasted_deal_time = #{dealTime}
		where order_code = #{orderCode}
	</update>

	<update id="completeOrder">
		update `order` set
		status = 30
		where order_code = #{orderCode}
		and status = 20
	</update>



	<select id="findCurrentOrder" resultType="com.entrusts.module.vo.CurrentEntrusts">
		select
		o.order_code as orderCode,
		o.created_time as date,
		c1.alias as baseCurrency,
		c2.alias as targetCurrency,
		if(o.trade_type = 1, 'buy', 'sell') as tradeType,
		o.convert_rate as orderPrice,
		o.deal_quantity as dealTargetQuantity,
		o.deal_amount as dealBaseAmount,
		status
		from `order` o
		left join trade_pair p on o.trade_pair_id = p.id
		left join digital_currency c1 on c1.id = p.base_currency_id
		left join digital_currency c2 on c2.id = p.target_currency_id
		where user_code = #{userCode}
		and status in (10, 20)
		AND o.is_deleted ='0'
		order by o.created_time desc
	</select>



</mapper>