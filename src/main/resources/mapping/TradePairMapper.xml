<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.entrusts.mapper.TradePairMapper">
  <resultMap id="BaseResultMap" type="com.entrusts.module.entity.TradePair">
    <id column="id" jdbcType="INTEGER" property="id" />
    <result column="base_currency_id" jdbcType="INTEGER" property="baseCurrencyId" />
    <result column="target_currency_id" jdbcType="INTEGER" property="targetCurrencyId" />
    <result column="min_trade_quantity" jdbcType="DECIMAL" property="minTradeQuantity" />
    <result column="base_currency_name" jdbcType="CHAR" property="baseCurrencyName" />
    <result column="target_currency_name" jdbcType="CHAR" property="targetCurrencyName" />
    <result column="is_deleted" jdbcType="TINYINT" property="isDeleted" />
  </resultMap>
    <resultMap id="mapTarget" type="com.entrusts.module.dto.TargetMapCurrency">
        <result column="baseAlias" property="baseAlias"/>
        <collection property="targetCurrencies" ofType="com.entrusts.module.dto.TargetCurrency">
            <result property="tradePareId" column="tradePareId"/>
            <result property="targetCurrencyId" column="targetCurrencyId"/>
            <result property="name" column="name"/>
            <result property="alias" column="alias"/>
        </collection>
    </resultMap>
  <select id="findTradePairByCoinName" resultMap="BaseResultMap">
    select a.id, a.base_currency_id, a.target_currency_id, a.min_trade_quantity, a.is_deleted
    from trade_pair a
     LEFT JOIN digital_currency bc ON bc.id = a.base_currency_id
     LEFT JOIN digital_currency tc ON tc.id = a.target_currency_id
    where bc.alias = #{baseCurrencyAlias}
     AND tc.alias = #{targetCurrencyAlias}
  </select>

  <select id="findTradePairById" resultMap="BaseResultMap">
    select a.id, a.base_currency_id, a.target_currency_id, a.min_trade_quantity, a.is_deleted,
    bc.alias as base_currency_name, tc.alias as target_currency_name
    from trade_pair a
     LEFT JOIN digital_currency bc ON bc.id = a.base_currency_id
     LEFT JOIN digital_currency tc ON tc.id = a.target_currency_id
    where a.id = #{tradePairId}
  </select>
    <select id="getBaseCurrency" resultType="com.entrusts.module.dto.BaseCurrency">
        SELECT
        p.base_currency_id AS 'baseCurrencyId',
        c.alias as 'alias',
        c.`name` as 'name',
        c.unit as 'unit'
        FROM
        trade_pair AS p,
        digital_currency AS c
        WHERE
        p.base_currency_id = c.id
        AND p.is_deleted = '0'
        AND c.is_deleted = '0'
        GROUP BY
        p.base_currency_id
    </select>
    <select id="updateTargetCurrency" resultMap="mapTarget">
        SELECT
        t.baseAlias AS 'baseAlias',
        t.targetCurrencyId AS 'targetCurrencyId',
        t.`name`AS 'name',
        t.alias AS 'alias',
        t.todayStartPrice AS 'todayStartPrice'
        FROM
        (
        SELECT
        c.id AS 'baseCurrencyId',
        c.alias AS 'baseAlias',
        p.order_by_num AS 'order_by_num',
        d.trade_pair_id AS 'trade_pair_id',
        x.id AS 'targetCurrencyId',
        x.`name` AS 'name',
        x.alias AS 'alias',
        d.deal_price AS 'todayStartPrice'
        FROM
        `deal` AS d
        INNER JOIN trade_pair AS p ON d.trade_pair_id = p.id
        INNER JOIN digital_currency AS c ON p.base_currency_id = c.id
        INNER JOIN digital_currency AS x ON p.target_currency_id = x.id
        ORDER BY
        d.`deal_time` DESC
        ) t
        GROUP BY
        t.trade_pair_id
        ORDER BY
        t.order_by_num
    </select>
    <select id="getAllAlias"  resultType="com.entrusts.module.dto.AliasMap">
        SELECT
        c.alias AS 'baseAlias',
        x.alias AS 'targetAlias'
        FROM
        trade_pair AS p
        INNER JOIN digital_currency AS c ON p.base_currency_id = c.id
        INNER JOIN digital_currency AS x ON p.target_currency_id = x.id
        WHERE p.id = #{tradePairId};
    </select>
    <select id="getTargetCurrency"  resultMap="mapTarget">
        SELECT
            p.id AS 'tradePareId',
            c.alias AS 'baseAlias',
            p.target_currency_id AS 'targetCurrencyId',
            x.`name` AS 'name',
            x.alias AS 'alias'
        FROM
            trade_pair AS p
        INNER JOIN digital_currency AS c ON p.base_currency_id = c.id
        INNER JOIN digital_currency AS x ON p.target_currency_id = x.id
        WHERE
            p.is_deleted=0
        ORDER BY
            p.order_by_num
    </select>
</mapper>