<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.entrusts.mapper.DealMapper">
	<resultMap id="BaseResultMap" type="com.entrusts.module.entity.Deal">
		<id column="trade_code" jdbcType="VARCHAR" property="tradeCode" />
		<result column="bid_order_code" jdbcType="CHAR" property="bidOrderCode" />
		<result column="ask_order_code" jdbcType="CHAR" property="askOrderCode" />
		<result column="trade_fee" jdbcType="DECIMAL" property="tradeFee" />
		<result column="deal_price" jdbcType="DECIMAL" property="dealPrice" />
		<result column="deal_quantity" jdbcType="DECIMAL" property="dealQuantity" />
		<result column="base_currencyId" jdbcType="INTEGER" property="baseCurrencyid" />
		<result column="target_currencyId" jdbcType="INTEGER" property="targetCurrencyid" />
		<result column="created_time" jdbcType="BIGINT" property="createdTime" />
		<result column="trade_pair_id" jdbcType="INTEGER" property="tradePairId" />
	</resultMap>
	<insert id="insert" parameterType="com.entrusts.module.entity.Deal">
		insert ignore into deal (trade_code, bid_order_code, ask_order_code, 
			trade_fee, deal_price, deal_quantity, 
			base_currencyId, target_currencyId, created_time, 
			trade_pair_id)
		values (#{tradeCode,jdbcType=VARCHAR}, #{bidOrderCode,jdbcType=CHAR}, #{askOrderCode,jdbcType=CHAR}, 
			#{tradeFee,jdbcType=DECIMAL}, #{dealPrice,jdbcType=DECIMAL}, #{dealQuantity,jdbcType=DECIMAL}, 
			#{baseCurrencyid,jdbcType=INTEGER}, #{targetCurrencyid,jdbcType=INTEGER}, #{createdTime,jdbcType=BIGINT}, 
			#{tradePairId,jdbcType=INTEGER})
	</insert>
	<select id="selectAll" resultMap="BaseResultMap">
		select trade_code, bid_order_code, ask_order_code, trade_fee, deal_price, deal_quantity, 
		base_currencyId, target_currencyId, created_time, trade_pair_id
		from deal
	</select>
	<select id="getRecentDeal" resultMap="BaseResultMap">
		SELECT
			t.trade_code,
			t.deal_price,
			t.deal_quantity,
			t.base_currencyId,
			t.target_currencyId,
			t.created_time,
			t.trade_pair_id
		FROM
			(
				SELECT
				trade_code,
				deal_price,
				deal_quantity,
				base_currencyId,
				target_currencyId,
				created_time,
				trade_pair_id
				FROM
					deal
				WHERE
					created_time BETWEEN #{startTime} AND #{endTime}
				ORDER BY
					`created_time` DESC
			) t
		GROUP BY
			t.trade_pair_id
	</select>
</mapper>